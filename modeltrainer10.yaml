name: Intent Classification Model Trainer
description: Trains an intent classification model using BERT with regularization and offline support

inputs:
  - {name: train_data, type: path, description: "Path to processed training data CSV"}
  - {name: val_data, type: path, description: "Path to processed validation data CSV"}
  - {name: preprocessing_metadata, type: path, description: "JSON file containing preprocessing metadata"}
  - {name: intent_mapping, type: path, description: "JSON file containing intent to ID mappings"}
  - {name: text_column, type: String, default: "processed_query", optional: true}
  - {name: intent_column, type: String, default: "intent_encoded", optional: true}
  - {name: dropout, type: number, default: 0.5, optional: true}
  - {name: hidden_size, type: number, default: 768, optional: true}
  - {name: freeze_layers, type: number, default: 6, optional: true}
  - {name: weight_decay, type: number, default: 0.01, optional: true}
  - {name: label_smoothing, type: number, default: 0.1, optional: true}
  - {name: learning_rate, type: number, default: 0.00001, optional: true}
  - {name: batch_size, type: number, default: 16, optional: true}
  - {name: max_length, type: number, default: 128, optional: true}
  - {name: epochs, type: number, default: 2, optional: true}

outputs:
  - {name: model_artifacts, type: path, description: "Directory containing saved model artifacts"}
  - {name: training_metadata, type: path, description: "JSON file containing training configuration and metrics"}
  - {name: training_log, type: path, description: "Training log file"}

implementation:
  container:
    image: ravidocker189/intentmodel:10
    command: [
      "model_trainer.py",
      "--train-data", {inputPath: train_data},
      "--val-data", {inputPath: val_data},
      "--preprocessing-metadata", {inputPath: preprocessing_metadata},
      "--intent-mapping", {inputPath: intent_mapping},
      "--text-column", {inputValue: text_column},
      "--intent-column", {inputValue: intent_column},
      "--dropout", {inputValue: dropout},
      "--hidden-size", {inputValue: hidden_size},
      "--freeze-layers", {inputValue: freeze_layers},
      "--weight-decay", {inputValue: weight_decay},
      "--label-smoothing", {inputValue: label_smoothing},
      "--learning-rate", {inputValue: learning_rate},
      "--batch-size", {inputValue: batch_size},
      "--max-length", {inputValue: max_length},
      "--epochs", {inputValue: epochs},
      "--output-dir", {outputPath: model_artifacts},
      "--training-metadata", {outputPath: training_metadata},
      "--training-log", {outputPath: training_log}
    ]
