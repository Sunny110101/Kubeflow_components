name: Intent Model Trainer Component
description: Component for training intent classification model using BERT
inputs:
  - {name: train_data, type: Dataset}  # Processed training data
  - {name: val_data, type: Dataset}    # Processed validation data
  - {name: preprocessing_metadata, type: String}  # Preprocessor metadata
  - {name: intent_mapping, type: String}  # Intent mapping from preprocessor
  - {name: text_column, type: String, optional: true}
  - {name: intent_column, type: String, optional: true}
  - {name: model_name, type: String, optional: true}
  - {name: batch_size, type: Integer, optional: true}
  - {name: epochs, type: Integer, optional: true}
outputs:
  - {name: trained_model, type: Model}
  - {name: training_metadata, type: String}
  - {name: training_logs, type: String}
implementation:
  container:
    image: ravidocker189/model_trainer:latest
    command: ["python"]
    args: [
      -u, model_trainer.py,
      "--train-data", {inputPath: train_data},
      "--val-data", {inputPath: val_data},
      "--preprocessing-metadata", {inputPath: preprocessing_metadata},
      "--intent-mapping", {inputPath: intent_mapping},
      "--text-column", {inputValue: text_column},
      "--intent-column", {inputValue: intent_column},
      "--model-name", {inputValue: model_name},
      "--batch-size", {inputValue: batch_size},
      "--epochs", {inputValue: epochs},
      "--output-dir", "/model/output"
    ]
    fileOutputs:
      trained_model: "/model/output/intent_model.pb"
      training_metadata: "/model/output/training_metadata.json"
      training_logs: "/model/output/training.log"
