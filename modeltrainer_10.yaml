name: Intent Classification Model Trainer
description: Trains an intent classification model using BERT with enhanced regularization and offline mode support

inputs:
  - {name: train_data, type: Dataset, description: "Path to processed training data CSV"}
  - {name: val_data, type: Dataset, description: "Path to processed validation data CSV"}
  - {name: preprocessing_metadata, type: String, description: "JSON file containing preprocessing metadata"}
  - {name: intent_mapping, type: String, description: "JSON file containing intent to ID mappings"}
  - {name: text_column, type: String, optional: true, default: "processed_query", description: "Name of the processed text column"}
  - {name: intent_column, type: String, optional: true, default: "intent_encoded", description: "Name of the encoded intent column"}
  - {name: model_path, type: String, optional: true, default: "/app/models/bert-base-uncased", description: "Path to local pre-trained model directory"}
  - {name: dropout, type: Float, optional: true, default: 0.5, description: "Dropout rate for regularization"}
  - {name: hidden_size, type: Integer, optional: true, default: 768, description: "Hidden size for classifier layers"}
  - {name: freeze_layers, type: Integer, optional: true, default: 6, description: "Number of layers to freeze in base model"}
  - {name: weight_decay, type: Float, optional: true, default: 0.01, description: "Weight decay for AdamW optimizer"}
  - {name: label_smoothing, type: Float, optional: true, default: 0.1, description: "Label smoothing factor"}
  - {name: learning_rate, type: Float, optional: true, default: 0.00001, description: "Learning rate for optimizer"}
  - {name: batch_size, type: Integer, optional: true, default: 16, description: "Training batch size"}
  - {name: max_length, type: Integer, optional: true, default: 128, description: "Maximum sequence length"}
  - {name: epochs, type: Integer, optional: true, default: 2, description: "Number of training epochs"}

outputs:
  - {name: model_artifacts, type: Directory, description: "Directory containing saved model artifacts"}
  - {name: training_metadata, type: String, description: "JSON file containing training configuration and metrics"}
  - {name: training_log, type: String, description: "Training log file"}

implementation:
  container:
    image: ravidocker189/intentmodel:10
    command: ["python"]
    args: [
      "-u", "model_trainer.py",
      "--train-data", {inputPath: train_data},
      "--val-data", {inputPath: val_data},
      "--preprocessing-metadata", {inputPath: preprocessing_metadata},
      "--intent-mapping", {inputPath: intent_mapping},
      "--text-column", {inputValue: text_column},
      "--intent-column", {inputValue: intent_column},
      "--model-path", {inputValue: model_path},
      "--dropout", {inputValue: dropout},
      "--hidden-size", {inputValue: hidden_size},
      "--freeze-layers", {inputValue: freeze_layers},
      "--weight-decay", {inputValue: weight_decay},
      "--label-smoothing", {inputValue: label_smoothing},
      "--learning-rate", {inputValue: learning_rate},
      "--batch-size", {inputValue: batch_size},
      "--max-length", {inputValue: max_length},
      "--epochs", {inputValue: epochs},
      "--output-dir", {outputPath: model_artifacts},
      "--training-metadata", {outputPath: training_metadata},
      "--training-log", {outputPath: training_log}
    ]
  
