name: Serve Intent Classification Models
description: Deploy Intent Classification Models using KServe with support for multiple formats
inputs:
  - {name: Model Name, type: String, description: 'Name for the deployed model service'}
  - {name: Namespace, type: String, default: 'kserve-test', description: 'Kubernetes namespace for deployment'}
  - {name: PyTorch URI, type: Directory, optional: true, description: 'Storage URI for PyTorch model'}
  - {name: ONNX URI, type: Directory, optional: true, description: 'Storage URI for ONNX model'}
  - {name: TensorFlow URI, type: Directory, optional: true, description: 'Storage URI for TensorFlow model'}
  - {name: SKLearn URI, type: Directory, optional: true, description: 'Storage URI for scikit-learn model'}
outputs:
  - {name: Deployment Status, type: String, description: 'Status of the model deployment'}
  - {name: Service URL, type: String, description: 'URL of the deployed service'}
  - {name: Metrics Path, type: String, description: 'Path to deployment metrics and logs'}
  - {name: Model Info, type: JsonObject, description: 'Information about the deployed model including endpoints and format used'}
implementation:
  container:
    image: ravidocker189/kserve_intent:26
    command: [python3]
    args: [
      -u, intent_kserve.py,
      '--model-name', {inputValue: Model Name},
      '--namespace', {inputValue: Namespace},
      '--pytorch-uri', {inputPath: PyTorch URI},
      '--onnx-uri', {inputPath: ONNX URI},
      '--tensorflow-uri', {inputPath: TensorFlow URI},
      '--sklearn-uri', {inputPath: SKLearn URI},
      '--output-deployment-status', {outputPath: Deployment Status},
      '--output-service-url', {outputPath: Service URL},
      '--output-metrics', {outputPath: Metrics Path},
      '--output-model-info', {outputPath: Model Info}
    ]
